Author : Kevin S. Brown (kevin.s.brown@uconn.edu, github.com/thelahunginjeet), Ann M. Hermundstad

A python package for construction and simulation of dynamical networks, including embedding in physical space (i.e., making
the edge weights correspond to some kind of physical distance).  Current support is only for pulse-coupled oscillators.
This package relies heavily on the networkx python package for graph representation and manipulation.

All source code is made available under the BSD-3 license.

You should run the tests via distutils:

>python setup.py test

(These will certainly fail without networkx installation.  Otherwise they should be fine.)

See the documentation in the modules for detailed usage and function arguments.

Example usage:

# create a network
net = PulseOscillatorNetwork(10,topology='ring')
# create a distance embedding
embed = DistanceEmbedding(len(net.nodes()))
# fix the distance matrix
embed.unitcirc_map()
# connect the graph topology with the distance matrix
net.set_edge_lengths(embed)
# set the delay and pulse parameters
net.eps = 0.1
net.delta = 1.0
# parameters for the EOMs
p = np.array([1,2])
# IC
y0 = np.zeros((len(net.nodes()),1))
# Integrate
y = net.euler_integrate(dydtMS,p,y0,100,M=10000,fullout=False)
